%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2006 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<br />
<%$msg%><br />

<&|/l&>Add new watchers</&>:<br />

<table>
% if ($Users and $Users->Count) {
<tr><td>
<&|/l&>Type</&>
</td><td>
<&|/l&>Username</&>
</td></tr>
% while (my $u = $Users->Next ) {
<tr><td><&/Elements/SelectWatcherType, Name => "Ticket-AddWatcher-Principal-".$u->PrincipalId &></td><td><%$u->Name%> (<%$u->RealName%>)</td></tr>
% }
% }

% if ($Groups and $Groups->Count) {
<tr><td>
<&|/l&>Type</&>
</td><td>
<&|/l&>Group</&>
</td></tr>
% while (my $g = $Groups->Next ) {
<tr><td><&/Elements/SelectWatcherType, Name => "Ticket-AddWatcher-Principal-".$g->PrincipalId, Scope => 'queue' &></td><td><%$g->Name%> (<%$g->Description%>)</td></tr>
% }
% }

<tr><td>
<&|/l&>Type</&>
</td><td>
<&|/l&>Email</&>
</td></tr>
<tr><td>
<&/Elements/SelectWatcherType, Name => "WatcherTypeEmail1" &>
</td><td>
<input name="WatcherAddressEmail1" size="15" id="WatcherAddressEmail1" />
<div class="auto_complete" id="WatcherAddressEmail1_to_auto_complete" id="WatcherAddressEmail1"></div>
<script type="text/javascript">new Ajax.Autocompleter('WatcherAddressEmail1', 'WatcherAddressEmail1_to_auto_complete', '/Ajax/Email', {})</script>
</td></tr>
<tr><td>
<&/Elements/SelectWatcherType, Name => "WatcherTypeEmail2" &>
</td><td>
<input name="WatcherAddressEmail2" size="15" id="WatcherAddressEmail2" />
<div class="auto_complete" id="WatcherAddressEmail2_to_auto_complete" id="WatcherAddressEmail2"></div>
<script type="text/javascript">new Ajax.Autocompleter('WatcherAddressEmail2', 'WatcherAddressEmail2_to_auto_complete', '/Ajax/Email', {})</script>
</td></tr>
<tr><td>
<&/Elements/SelectWatcherType, Name => "WatcherTypeEmail3" &>
</td><td>
<input name="WatcherAddressEmail3" size="15" id="WatcherAddressEmail3" />
<div class="auto_complete" id="WatcherAddressEmail3_to_auto_complete" id="WatcherAddressEmail3"></div>
<script type="text/javascript">new Ajax.Autocompleter('WatcherAddressEmail3', 'WatcherAddressEmail3_to_auto_complete', '/Ajax/Email', {})</script>
</td></tr>
</table>

<%INIT>
my ($msg, $Users, $Groups);

if ($UserString) {
    $Users = RT::Users->new($session{'CurrentUser'});
    $Users->Limit(FIELD => $UserField, VALUE => $UserString, OPERATOR => $UserOp);
    $Users->LimitToPrivileged if $PrivilegedOnly;
     }

if ($GroupString) {
    $Groups = RT::Groups->new($session{'CurrentUser'});
    $Groups->Limit(FIELD => 'Domain', OPERATOR => '=', VALUE => 'UserDefined');
    $Groups->Limit(FIELD => $GroupField, VALUE => $GroupString, OPERATOR => $GroupOp);
     }

</%INIT>

<%ARGS>
$UserField => 'Name'
$UserOp => '='
$UserString => undef
$GroupField => 'Name'
$GroupOp => '='
$GroupString => undef
$PrivilegedOnly => undef
</%ARGS>
